workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

default:
  image: quay.io/centos-sig-automotive/automotive-osbuild

include:
  - project: 'redhat/edge/ci-cd/pipe-x/pipelines-as-code'
    ref: gitlab-ci
    file:
      - '/.gitlab/trigger.yml'

stages:
  - pre
  - test
  - container
  - deploy
  - trigger

linter:
  image: python:latest
  before_script:
    - python3 --version; pip --version
    - python3 -m pip install --upgrade pip
    - python3 -m pip install tox
  stage: pre
  script:
    - tox -e lint

yamllint-job:
  image: python:latest
  before_script:
    - python3 --version; pip --version
    - python3 -m pip install --upgrade pip
    - python3 -m pip install tox
  stage: pre
  script:
    - tox -e yamllint

compose-test-job:
  stage: test
  script:
    - tests/test-compose tests/test-compose.json

compose-test-modified-distro:
 stage: test
 script:
   - 'tests/test-compose tests/test-compose.json distro "$(git diff --diff-filter=d --name-only ${CI_MERGE_REQUEST_DIFF_BASE_SHA} | grep ^distro/ | xargs -r basename -s .ipp.yml)"'
 rules:
   - changes:
       - distro/*.ipp.yml
 # Allow this job to fail as it's expected to fail for some cases
 # Still we want to check and see the errors
 allow_failure: true

compose-test-modified-target:
 stage: test
 script:
   - 'tests/test-compose tests/test-compose.json target "$(git diff --diff-filter=d --name-only ${CI_MERGE_REQUEST_DIFF_BASE_SHA} | grep ^targets/ | xargs -r basename -s .ipp.yml)"'
 rules:
   - changes:
       - targets/*.ipp.yml

unit-test-job:
  image: python:latest
  before_script:
    - python3 --version; pip --version
    - python3 -m pip install --upgrade pip
    - python3 -m pip install tox
  stage: test
  script:
    - tox -e test,coverage
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/report.xml
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

build-image-x86-job:
  image: quay.io/centos-sig-automotive/automotive-osbuild
  stage: test
  script:
    - ./automotive-image-builder build --mode=image --export qcow2 example.mpp.yml example.qcow2

build-package-x86-job:
  image: quay.io/centos-sig-automotive/automotive-osbuild
  stage: test
  script:
    - ./automotive-image-builder build --mode=package --export image example.mpp.yml example.img

packit-srpm-build:
  image: quay.io/packit/packit
  stage: test
  script:
    - packit srpm
  artifacts:
    paths:
      - "*.src.rpm"
    expire_in: 1 week

build-simple-image-x86-job:
  image: quay.io/centos-sig-automotive/automotive-osbuild
  stage: test
  script:
    - ./automotive-image-builder build --mode=image --export image examples/complex.aib.yml example.img

build-simple-package-x86-job:
  image: quay.io/centos-sig-automotive/automotive-osbuild
  stage: test
  script:
    - ./automotive-image-builder build --mode=package --export image examples/complex.aib.yml example.img

pages:
  stage: deploy
  image: python:3.11
  before_script:
    - python3 --version; pip --version
    - python3 -m pip install --upgrade pip
    - python3 -m pip install pyyaml jsonschema json-schema-for-humans
  artifacts:
    paths:
      - public
  script:
    - mkdir -p public
    - cp docs/index.html public/
    - generate-schema-doc files/manifest_schema.yml public/simple_manifest.html
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

container-latest:
  stage: container
  image: quay.io/buildah/stable:latest
  parallel:
    matrix:
      - ARCH: [amd64, arm64]
  variables:
    IMAGE: automotive-image-builder
  before_script:
    - buildah login -u "$CONTAINER_REGISTRY_USER" -p "$CONTAINER_REGISTRY_PASSWORD" quay.io
  script:
    - buildah bud -f Containerfile -t "$IMAGE:latest-$ARCH" .
    - buildah push "$IMAGE:latest-$ARCH" "quay.io/centos-sig-automotive/$IMAGE:latest-$ARCH"
# TEST
#  rules:
#    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"

container-latest-manifest:
  stage: deploy
  image: quay.io/buildah/stable:latest
  variables:
    IMAGE: automotive-image-builder
    MANIFEST: quay.io/centos-sig-automotive/$IMAGE:latest
  script:
    - |
      buildah login -u "$CONTAINER_REGISTRY_USER" -p "$CONTAINER_REGISTRY_PASSWORD" quay.io
      buildah manifest create $MANIFEST
      for ARCH in amd64 arm64; do
        buildah manifest add $MANIFEST "quay.io/centos-sig-automotive/$IMAGE:latest-$ARCH"
      done
      buildah manifest push --all $MANIFEST $MANIFEST
# TEST
#  rules:
#    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"

trigger-pipeline:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.py"
        - "**/*.yml"
        - automotive-image-builder
        - mpp/aib-osbuild-mpp
        - files/*
        - tests/*
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - !reference [.trigger-template, rules]
