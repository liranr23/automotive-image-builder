version: '2'
mpp-vars:
  partition_label:
    mpp-eval: locals().get('partition_label', 'gpt')
mpp-define-image:
  size: $image_size
  table:
    uuid: D209C89E-EA5E-4FBD-B161-B461CCE297E0
    label:
      mpp-eval: partition_label
    partitions:
    - id: efi
      start:
        mpp-eval: "0 if partition_label == 'gpt' else 2048"
      size: 204800
      type:
        mpp-eval: "'C12A7328-F81F-11D2-BA4B-00A0C93EC93B' if partition_label == 'gpt' else 'ef'"
      uuid: 68B2905B-DF3E-4FB3-80FA-49D1E773AA33
    - id: boot
      size: 409600
      type:
        mpp-eval: "'0FC63DAF-8483-4772-8E79-3D69D8477DE4' if partition_label == 'gpt' else '83'"
      uuid: 61B2905B-DF3E-4FB3-80FA-49D1E773AA32
    - id: root
      type:
        mpp-eval: "'0FC63DAF-8483-4772-8E79-3D69D8477DE4' if partition_label == 'gpt' else '83'"
      uuid: 6264D520-3FB9-423F-8AB8-7A0A8E3D3562
pipelines:
- mpp-import-pipelines:
    path: cs9-$image_type-image.mpp.yml
- name: image
  build: name:build
  stages:
  - type: org.osbuild.truncate
    options:
      filename: disk.img
      size:
        mpp-eval: image.size
  - type: org.osbuild.sfdisk
    devices:
      device:
        type: org.osbuild.loopback
        options:
          filename: disk.img
    options:
      mpp-format-json: '{image.layout}'
  - type: org.osbuild.mkfs.fat
    devices:
      device:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['efi'].start
          size:
            mpp-eval: image.layout['efi'].size
    options:
      label: ESP
      volid: 7B7795E7
  - type: org.osbuild.mkfs.ext4
    devices:
      device:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['boot'].start
          size:
            mpp-eval: image.layout['boot'].size
    options:
      uuid:
        mpp-eval: bootfs_uuid
      label: boot
  - type: org.osbuild.mkfs.ext4
    devices:
      device:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['root'].start
          size:
            mpp-eval: image.layout['root'].size
    options:
      uuid:
        mpp-eval: rootfs_uuid
      label: root
  - type: org.osbuild.copy
    inputs:
      tree:
        type: org.osbuild.tree
        origin: org.osbuild.pipeline
        references:
        - name:image-tree
      build-tree:
        type: org.osbuild.tree
        origin: org.osbuild.pipeline
        references:
        - name:build
      extra-tree:
        mpp-if: "'extra_image_source_' + image_type in locals()"
        then:
          type: org.osbuild.tree
          origin: org.osbuild.pipeline
          references:
            - mpp-format-string: "name:{locals().get('extra_image_source_' + image_type)}"
    options:
      paths:
        mpp-join:
        - - from: input://tree/
            to: mount://root/
        - mpp-eval: locals().get('extra_image_copy_' + image_type, [])
    devices:
      efi:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['efi'].start
          size:
            mpp-eval: image.layout['efi'].size
      boot:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['boot'].start
          size:
            mpp-eval: image.layout['boot'].size
      root:
        type: org.osbuild.loopback
        options:
          filename: disk.img
          start:
            mpp-eval: image.layout['root'].start
          size:
            mpp-eval: image.layout['root'].size
    mounts:
    - name: root
      type: org.osbuild.ext4
      source: root
      target: /
    - name: boot
      type: org.osbuild.ext4
      source: boot
      target: /boot
    - name: efi
      type: org.osbuild.fat
      source: efi
      target: /boot/efi
- name: qcow2
  build: name:build
  stages:
  - type: org.osbuild.qemu
    inputs:
      image:
        type: org.osbuild.files
        origin: org.osbuild.pipeline
        references:
          name:image:
            file: disk.img
    options:
      filename: disk.qcow2
      format:
        type: qcow2
        compat: '1.1'
